use std::{
    io::{
        stdin, stdout, Read, Write
    }, 
    time::{
        SystemTime, UNIX_EPOCH
    }
};

pub fn input(prompt:&str) -> String {
    let mut s= String::new();
    print!("{}", prompt);
    let _= stdout().flush();
    stdin().read_line(&mut s).expect("Did not enter a correct string");
    if let Some('\n')=s.chars().next_back() {
        s.pop();
    }
    if let Some('\r')=s.chars().next_back() {
        s.pop();
    }
    s
}

pub fn pause() {
    let mut stdout = stdout();
    stdout.flush().unwrap();
    stdin().read(&mut [0]).unwrap();
}

pub fn find_string(strings: &[String], input: &str) -> Option<usize> {
    if input.is_empty() {
        return None;
    }
    strings.iter().position(|s| {
        if s.is_empty() {
            return false;
        }
        s == input || s.to_lowercase() == input.to_lowercase()
    })
}

pub fn select_from_options(options: &[String]) -> usize {
    loop {
        let res: String = self::input("your option: ");
        match find_string(options, res.as_ref()) {
            Some(index) => return index,
            None => {
                println!("Please select a valid option");
                continue;
            }
        }
    }
}

pub fn get_time() -> u128 {
    let since_the_epoch = SystemTime::now()
        .duration_since(UNIX_EPOCH)
        .expect("Time went backwards")
        .as_millis();
    since_the_epoch
}

pub enum Banners {
    Logo = 0,
    Games = 1,
    Challenges = 2,
    Other = 3,
}

const LOGO:[&'static str;13] = [
    "-----------------------------------------------------------------------------------------------------------------------------------------------------------------",
    ".----------------.  .----------------.  .----------------.  .----------------.   .----------------.  .----------------.  .----------------.  .----------------. ",
    "| .--------------. || .--------------. || .--------------. || .--------------. | | .--------------. || .--------------. || .--------------. || .--------------. |",
    "| |  _______     | || | _____  _____ | || |    _______   | || |  _________   | | | |              | || |     ______   | || |   _____      | || |     _____    | |",
    "| | |_   __ \\    | || ||_   _||_   _|| || |   /  ___  |  | || | |  _   _  |  | | | |              | || |   .' ___  |  | || |  |_   _|     | || |    |_   _|   | |",
    "| |   | |__) |   | || |  | |    | |  | || |  |  (__ \\_|  | || | |_/ | | \\_|  | | | |    ______    | || |  / .'   \\_|  | || |    | |       | || |      | |     | |",
    "| |   |  __ /    | || |  | '    ' |  | || |   '.___`-.   | || |     | |      | | | |   |______|   | || |  | |         | || |    | |   _   | || |      | |     | |",
    "| |  _| |  \\ \\_  | || |   \\ `--' /   | || |  |`\\____) |  | || |    _| |_     | | | |              | || |  \\ `.___.'\\  | || |   _| |__/ |  | || |     _| |_    | |",
    "| | |____| |___| | || |    `.__.'    | || |  |_______.'  | || |   |_____|    | | | |              | || |   `._____.'  | || |  |________|  | || |    |_____|   | |",
    "| |              | || |              | || |              | || |              | | | |              | || |              | || |              | || |              | |",
    "| '--------------' || '--------------' || '--------------' || '--------------' | | '--------------' || '--------------' || '--------------' || '--------------' |",
    " '----------------'  '----------------'  '----------------'  '----------------'   '----------------'  '----------------'  '----------------'  '----------------' ",
    "------------------------------------------------------------------------------------------------------------------------------------------------------------------",
];

const GAMES: [&'static str; 13] = [
    "----------------------------------------------------------------------------------------------------",
    ".----------------.  .----------------.  .----------------.  .----------------.  .----------------. ",
    "| .--------------. || .--------------. || .--------------. || .--------------. || .--------------. |",
    "| |    ______    | || |      __      | || | ____    ____ | || |  _________   | || |    _______   | |",
    "| |  .' ___  |   | || |     /  \\     | || ||_   \\  /   _|| || | |_   ___  |  | || |   /  ___  |  | |",
    "| | / .'   \\_|   | || |    / /\\ \\    | || |  |   \\/   |  | || |   | |_  \\_|  | || |  |  (__ \\_|  | |",
    "| | | |    ____  | || |   / ____ \\   | || |  | |\\  /| |  | || |   |  _|  _   | || |   '.___`-.   | |",
    "| | \\ `.___]  _| | || | _/ /    \\ \\_ | || | _| |_\\/_| |_ | || |  _| |___/ |  | || |  |`\\____) |  | |",
    "| |  `._____.'   | || ||____|  |____|| || ||_____||_____|| || | |_________|  | || |  |_______.'  | |",
    "| |              | || |              | || |              | || |              | || |              | |",
    "| '--------------' || '--------------' || '--------------' || '--------------' || '--------------' |",
    " '----------------'  '----------------'  '----------------'  '----------------'  '----------------' ",
    "----------------------------------------------------------------------------------------------------",
];

const CHALLENGES: [&'static str; 13] = [
    "--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------",
    " .----------------.  .----------------.  .----------------.  .----------------.  .----------------.  .----------------.  .-----------------. .----------------.  .----------------.  .----------------. ",
    "| .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. |",
    "| |     ______   | || |  ____  ____  | || |      __      | || |   _____      | || |   _____      | || |  _________   | || | ____  _____  | || |    ______    | || |  _________   | || |    _______   | |",
    "| |   .' ___  |  | || | |_   ||   _| | || |     /  \\     | || |  |_   _|     | || |  |_   _|     | || | |_   ___  |  | || ||_   \\|_   _| | || |  .' ___  |   | || | |_   ___  |  | || |   /  ___  |  | |",
    "| |  / .'   \\_|  | || |   | |__| |   | || |    / /\\ \\    | || |    | |       | || |    | |       | || |   | |_  \\_|  | || |  |   \\ | |   | || | / .'   \\_|   | || |   | |_  \\_|  | || |  |  (__ \\_|  | |",
    "| |  | |         | || |   |  __  |   | || |   / ____ \\   | || |    | |   _   | || |    | |   _   | || |   |  _|  _   | || |  | |\\ \\| |   | || | | |    ____  | || |   |  _|  _   | || |   '.___`-.   | |",
    "| |  \\ `.___.'\\  | || |  _| |  | |_  | || | _/ /    \\ \\_ | || |   _| |__/ |  | || |   _| |__/ |  | || |  _| |___/ |  | || | _| |_\\   |_  | || | \\ `.___]  _| | || |  _| |___/ |  | || |  |`\\____) |  | |",
    "| |   `._____.'  | || | |____||____| | || ||____|  |____|| || |  |________|  | || |  |________|  | || | |_________|  | || ||_____|\\____| | || |  `._____.'   | || | |_________|  | || |  |_______.'  | |",
    "| |              | || |              | || |              | || |              | || |              | || |              | || |              | || |              | || |              | || |              | |",
    "| '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' |",
    " '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------' ",
    "--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------",
];

const OTHER: [&'static str; 13] = [
    "----------------------------------------------------------------------------------------------------",
    ".----------------.  .----------------.  .----------------.  .----------------.  .----------------. ",
    "| .--------------. || .--------------. || .--------------. || .--------------. || .--------------. |",
    "| |     ____     | || |  _________   | || |  ____  ____  | || |  _________   | || |  _______     | |",
    "| |   .'    `.   | || | |  _   _  |  | || | |_   ||   _| | || | |_   ___  |  | || | |_   __ \\    | |",
    "| |  /  .--.  \\  | || | |_/ | | \\_|  | || |   | |__| |   | || |   | |_  \\_|  | || |   | |__) |   | |",
    "| |  | |    | |  | || |     | |      | || |   |  __  |   | || |   |  _|  _   | || |   |  __ /    | |",
    "| |  \\  `--'  /  | || |    _| |_     | || |  _| |  | |_  | || |  _| |___/ |  | || |  _| |  \\ \\_  | |",
    "| |   `.____.'   | || |   |_____|    | || | |____||____| | || | |_________|  | || | |____| |___| | |",
    "| |              | || |              | || |              | || |              | || |              | |",
    "| '--------------' || '--------------' || '--------------' || '--------------' || '--------------' |",
    " '----------------'  '----------------'  '----------------'  '----------------'  '----------------' ",
    "----------------------------------------------------------------------------------------------------",
];

const BANNERS: [[&'static str;13]; 4] = [
    LOGO,
    GAMES,
    CHALLENGES,
    OTHER
];

pub fn print_banner(banner_type:Banners) -> () {
    for line in BANNERS[banner_type as usize] {
        println!("{}", line);
    }
}